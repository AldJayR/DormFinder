# Generated by Django 5.1.4 on 2025-01-25 13:04

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='booking',
            options={'ordering': ['-created_at'], 'verbose_name': 'Booking', 'verbose_name_plural': 'Bookings'},
        ),
        migrations.AddField(
            model_name='booking',
            name='move_out_date',
            field=models.DateField(db_index=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='booking',
            name='move_in_date',
            field=models.DateField(db_index=True, help_text='Follows academic calendar'),
        ),
        migrations.AlterField(
            model_name='booking',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending Approval'), ('confirmed', 'Confirmed'), ('canceled', 'Canceled'), ('completed', 'Completed')], db_index=True, default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='dorm',
            name='monthly_rate',
            field=models.DecimalField(decimal_places=2, help_text='Monthly rent in PHP', max_digits=10, validators=[django.core.validators.MinValueValidator(1500)]),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_verified',
            field=models.BooleanField(db_index=True, default=False, help_text='Verified by admin (for dorm owners)'),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('student', 'Student'), ('dorm_owner', 'Dorm Owner'), ('admin', 'Admin')], db_index=True, default='student', help_text='User role in the system', max_length=20),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status', 'created_at'], name='core_bookin_status_b29764_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['move_in_date'], name='core_bookin_move_in_321b6b_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['user', 'status'], name='booking_user_status_idx'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.CheckConstraint(condition=models.Q(('move_in_date__gt', models.F('created_at'))), name='move_in_after_creation'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.CheckConstraint(condition=models.Q(('move_out_date__gt', models.F('move_in_date'))), name='move_out_after_move_in'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.UniqueConstraint(fields=('user', 'dorm', 'move_in_date'), name='unique_user_dorm_movein'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(models.Q(('role', 'student'), ('school_id_number__isnull', False)), ('role__in', ['dorm_owner', 'admin']), _connector='OR')), name='student_requires_neust_id'),
        ),
    ]
